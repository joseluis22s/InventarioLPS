@model InventarioLPS.Models.Inventario.RegistroInventarioViewModel

@{
	ViewData["Title"] = "Nuevo registro de inventario";
}

@* MODAL PARA DUPLICAR *@
<div class="modal" id="duplicaModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Número de duplicados</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">¿Cuántas copias desea crear?</label>
                    <input type="number" id="duplicaCount" min="1" max="20" value="1" class="form-control" required />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" id="confirmDuplica" class="btn btn-primary">Duplicar</button>
            </div>
        </div>
    </div>
</div>

<h5 class="ps-1">@ViewBag.Title</h5>
<form asp-action="Create" class="container-fluid border-top border-start">
    <div class="row mt-3">
        <div class="col-12">
            <button type="submit" class="btn btn-primary btn-form">Guardar</button>
        </div>
    </div>
    <div class="row mx-2 mt-1">
		<!-- Campos del documento (sin cambios) -->
		<div class="col-8 col-md-6 col-lg-2">
            <label asp-for="MontoTotal" class="form-label label-sm"></label>
            <input asp-for="MontoTotal" class="form-control input-sm" />
            <span asp-validation-for="MontoTotal" class="text-danger label-sm"></span>
		</div>
        <div class="col-8 col-md-6 col-lg-3">
            <label asp-for="NumeroDocumento" class="form-label label-sm">No. Documento</label>
            <input asp-for="NumeroDocumento" class="form-control input-sm" />
            <span asp-validation-for="NumeroDocumento" class="text-danger label-sm"></span>
		</div>
        <div class="w-100 d-md-none"></div>
        <div class="col-8 col-md-6 col-lg-4">
            <label asp-for="FormaRegistro" class="form-label label-sm">Forma de registro</label>
            <select asp-for="FormaRegistro" asp-items="ViewBag.FormasRegistro" class="form-select input-sm">
				<option value="">-- Seleccione --</option>
			</select>
            <span asp-validation-for="FormaRegistro" class="text-danger label-sm"></span>
		</div>
        <div class="col-8 col-md-6 col-lg-3">
            <label asp-for="FechaCompra" class="form-label label-sm"></label>
            <input asp-for="FechaCompra" class="form-control input-sm" />
            <span asp-validation-for="FechaCompra" class="text-danger label-sm"></span>
        </div>
	</div>

    <hr class="mx-2"/>

	<!-- Tabla  -->
	<div class="row overflow-auto">
		<div class="d-flex justify-content-between align-items-center mb-2">
			<h6>Registro de items</h6>
			<div>
                <button type="button" id="btnAddRow" class="btn btn-outline-dark btn-form">
					<i class="bi bi-plus-lg"></i> Agregar fila
				</button>
                <button type="button" id="btnDuplicarSeleccionados" class="btn btn-outline-danger btn-form">
                    <i class="bi bi-trash"></i> Borrar seleccionados
				</button>
			</div>
		</div>
        <div class="table-responsive">
            <table class="table">
                <thead class="fs-theader">
                    <tr>
                        <th></th>
                        <th>Código</th>
                        <th>Cantidad</th>
                        <th>Valor sin IVA</th>
                        <th>Proveedor</th>
                        <th>Producto</th>
                        <th>Departamento</th>
                        <th>Categoría</th>
                        <th>Linea de servicio</th>
                        <th>Sub-línea</th>
                        <th>Descrip. específica</th>
                        <th>Especifi. técnicas</th>
                        <th># fabricante</th>
                        <th># serie LPS</th>
                        <th>Ubicación</th>
                        <th>Estatus</th>
                        <th>Clasificación</th>
                    </tr>
                </thead>
                <tbody id="tbodyItems" class="fs-tbody">
                    @foreach (var (item, index) in Model.Items.Select((item, index) => (item, index)))
                    {
                        @await Html.PartialAsync("_ItemInventarioPartial", item, new ViewDataDictionary(ViewData) { { "Index", index } })
                    }
                </tbody>
            </table>
        </div>
	</div>
</form>
<script>
        $(document).ready(function() {
        let rowCount = @Model.Items.Count;
        let selectedRowForDuplication = null;

        // Función genérica para agregar filas
        const addNewRow = async (index) => {
            try {
                const response = await fetch(`@Url.Action("GetNewItemRow", "Inventario")?index=${index}`);
                if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                return await response.text();
            } catch (error) {
                console.error('Error adding row:', error);
                throw error;
            }
        };

        // Agregar nueva fila
        $('#btnAddRow').click(async () => {
            try {
                const html = await addNewRow(rowCount);
                $('#tbodyItems').append(html);
                rowCount++;
                $.validator.unobtrusive.parse('form');
            } catch (error) {
                alert('Error al agregar fila: ' + error.message);
            }
        });

        // Duplicar fila
        $(document).on('click', '.btn-duplicate-row', function() {
            selectedRowForDuplication = $(this).closest('tr');
            $('#duplicaModal').modal('show');
        });

        // Confirmar duplicación
        $('#confirmDuplica').click(() => {
            const count = Math.min(Math.max(1, parseInt($('#duplicaCount').val()) || 1), 20);

            const originalData = {};
            selectedRowForDuplication.find('input, select').each(function() {
                const field = $(this).attr('name').split('.').pop();
                originalData[field] = $(this).val();
            });

            const newRows = [];
            for (let i = 0; i < count; i++) {
                const newIndex = rowCount + i;
                const newRow = selectedRowForDuplication.clone();

                newRow.find('input, select').each(function() {
                    const $el = $(this);
                    const name = $el.attr('name').replace(/\[\d+\]/, `[${newIndex}]`);
                    $el.attr('name', name)
                       .val(originalData[name.split('.').pop()])
                       .removeClass('input-validation-error')
                       .next('.field-validation-error').remove();

                    if (name.endsWith('CodigoItem]')) {
                        $el.val($el.val() + '-' + (i+1));
                    }
                });

                newRows.push(newRow);
            }

            $('#tbodyItems').append(newRows);
            rowCount += count;
            $('#duplicaModal').modal('hide');
            $.validator.unobtrusive.parse('form');
        });

        // Eliminar fila
        $(document).on('click', '.btn-remove-row', function() {
            $(this).closest('tr').remove();
            reindexRows();
        });

        // Reindexar filas
        const reindexRows = () => {
            $('#tbodyItems tr').each(function(index) {
                $(this).find('input, select').attr('name', (i, name) =>
                    name.replace(/\[\d+\]/, `[${index}]`)
                );
            });
            rowCount = $('#tbodyItems tr').length;
        };

        // Inicializar con una fila si está vacío
    @if (!Model.Items.Any())
    {
        <text>$('#btnAddRow').click();</text>
    }
    });
    
</script>
	