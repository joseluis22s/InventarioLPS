// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using InventarioLPS.Data.Entities;
using Microsoft.EntityFrameworkCore;

namespace InventarioLPS.Data;

public partial class InventarioLPSContext : DbContext
{
    public InventarioLPSContext(DbContextOptions<InventarioLPSContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Categoria> Categoria { get; set; }

    public virtual DbSet<Clasificacion> Clasificacion { get; set; }

    public virtual DbSet<Cliente> Cliente { get; set; }

    public virtual DbSet<CorreoAdicionalProveedor> CorreoAdicionalProveedor { get; set; }

    public virtual DbSet<Departamento> Departamento { get; set; }

    public virtual DbSet<DetalleLih> DetalleLih { get; set; }

    public virtual DbSet<DetalleNoOperativo> DetalleNoOperativo { get; set; }

    public virtual DbSet<DetalleVendido> DetalleVendido { get; set; }

    public virtual DbSet<Empleado> Empleado { get; set; }

    public virtual DbSet<Estatus> Estatus { get; set; }

    public virtual DbSet<FormaRegistro> FormaRegistro { get; set; }

    public virtual DbSet<GuiaRemision> GuiaRemision { get; set; }

    public virtual DbSet<InformacionRegistro> InformacionRegistro { get; set; }

    public virtual DbSet<ItemInventario> ItemInventario { get; set; }

    public virtual DbSet<ItemsNoOperativo> ItemsNoOperativo { get; set; }

    public virtual DbSet<LineaServicio> LineaServicio { get; set; }

    public virtual DbSet<NovedadItem> NovedadItem { get; set; }

    public virtual DbSet<Perfil> Perfil { get; set; }

    public virtual DbSet<PerfilPermisos> PerfilPermisos { get; set; }

    public virtual DbSet<Permisos> Permisos { get; set; }

    public virtual DbSet<Producto> Producto { get; set; }

    public virtual DbSet<Proveedor> Proveedor { get; set; }

    public virtual DbSet<SubLineaServicio> SubLineaServicio { get; set; }

    public virtual DbSet<TransaccionesEstadoItem> TransaccionesEstadoItem { get; set; }

    public virtual DbSet<Ubicacion> Ubicacion { get; set; }

    public virtual DbSet<Usuario> Usuario { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Categoria>(entity =>
        {
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(120)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Clasificacion>(entity =>
        {
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(120)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Cliente>(entity =>
        {
            entity.Property(e => e.NombreCliente)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false);
            entity.Property(e => e.NumeroIdentificacion)
                .IsRequired()
                .HasMaxLength(14)
                .IsUnicode(false);
            entity.Property(e => e.Telefono)
                .IsRequired()
                .HasMaxLength(11)
                .IsUnicode(false);
        });

        modelBuilder.Entity<CorreoAdicionalProveedor>(entity =>
        {
            entity.HasKey(e => e.IdCorreo);

            entity.Property(e => e.Correo)
                .IsRequired()
                .HasMaxLength(120)
                .IsUnicode(false);

            entity.HasOne(d => d.IdProveedorNavigation).WithMany(p => p.CorreoAdicionalProveedor)
                .HasForeignKey(d => d.IdProveedor)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CorreoAdicionalProveedor_Proveedor");
        });

        modelBuilder.Entity<Departamento>(entity =>
        {
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(120)
                .IsUnicode(false);
        });

        modelBuilder.Entity<DetalleLih>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_DetalleEstatusLIH");

            entity.ToTable("DetalleLIH");

            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.IdEstatusLih).HasColumnName("IdEstatusLIH");
            entity.Property(e => e.Pozo)
                .IsRequired()
                .HasMaxLength(80)
                .IsUnicode(false);

            entity.HasOne(d => d.IdClienteNavigation).WithMany(p => p.DetalleLih)
                .HasForeignKey(d => d.IdCliente)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_DetalleEstatusLIH_Cliente");

            entity.HasOne(d => d.IdEstatusLihNavigation).WithMany(p => p.DetalleLih)
                .HasForeignKey(d => d.IdEstatusLih)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_DetalleEstatusLIH_Estatus");
        });

        modelBuilder.Entity<DetalleNoOperativo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_DetalleItemNoOperativo");

            entity.Property(e => e.EspecificarOtro)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false);
            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.Justificativo)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false);

            entity.HasOne(d => d.IdEstatusNoOpNavigation).WithMany(p => p.DetalleNoOperativo)
                .HasForeignKey(d => d.IdEstatusNoOp)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_DetalleNoOperativo_Estatus");

            entity.HasOne(d => d.IdItemNoOpNavigation).WithMany(p => p.DetalleNoOperativo)
                .HasForeignKey(d => d.IdItemNoOp)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_DetalleItemNoOperativo_ItemsNoOperativo");
        });

        modelBuilder.Entity<DetalleVendido>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_DetalleEstatusVendido");

            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.Pozo)
                .IsRequired()
                .HasMaxLength(80)
                .IsUnicode(false);

            entity.HasOne(d => d.IdClienteNavigation).WithMany(p => p.DetalleVendido)
                .HasForeignKey(d => d.IdCliente)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_DetalleEstatusVendido_Cliente");

            entity.HasOne(d => d.IdEstatusVendidoNavigation).WithMany(p => p.DetalleVendido)
                .HasForeignKey(d => d.IdEstatusVendido)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_DetalleEstatusVendido_Estatus");

            entity.HasOne(d => d.IdGuiaRemisionNavigation).WithMany(p => p.DetalleVendido)
                .HasForeignKey(d => d.IdGuiaRemision)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_DetalleVendido_GuiaRemision");
        });

        modelBuilder.Entity<Empleado>(entity =>
        {
            entity.Property(e => e.PrimerApellido)
                .IsRequired()
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.PrimerNombre)
                .IsRequired()
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.SegundoApellido)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.SegundoNombre)
                .HasMaxLength(150)
                .IsUnicode(false);

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.Empleado)
                .HasForeignKey(d => d.IdUsuario)
                .HasConstraintName("FK_Empleado_Usuario");
        });

        modelBuilder.Entity<Estatus>(entity =>
        {
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(80)
                .IsUnicode(false);
        });

        modelBuilder.Entity<FormaRegistro>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_FormaRegistroItem");

            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<GuiaRemision>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Numero)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false);
        });

        modelBuilder.Entity<InformacionRegistro>(entity =>
        {
            entity.Property(e => e.FechaCompra).HasColumnType("datetime");
            entity.Property(e => e.MontoTotal).HasColumnType("decimal(18, 12)");
            entity.Property(e => e.NumeroDocumento)
                .IsRequired()
                .HasMaxLength(150)
                .IsUnicode(false);

            entity.HasOne(d => d.IdFormaRegistroNavigation).WithMany(p => p.InformacionRegistro)
                .HasForeignKey(d => d.IdFormaRegistro)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_InformacionRegistro_FormaRegistro");
        });

        modelBuilder.Entity<ItemInventario>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ItemInventario_1");

            entity.HasIndex(e => e.CodigoItem, "UQ_ItemInventario_IdItem").IsUnique();

            entity.Property(e => e.Categoria)
                .IsRequired()
                .HasMaxLength(120)
                .IsUnicode(false);
            entity.Property(e => e.Clasificacion)
                .IsRequired()
                .HasMaxLength(120)
                .IsUnicode(false);
            entity.Property(e => e.CodigoItem)
                .IsRequired()
                .HasMaxLength(120)
                .IsUnicode(false)
                .HasComment("Código propio identificador para el usuario.");
            entity.Property(e => e.CodigoProducto)
                .IsRequired()
                .HasMaxLength(120)
                .IsUnicode(false)
                .HasComment("Clave foránea que ya tiene detalles");
            entity.Property(e => e.Departamento)
                .IsRequired()
                .HasMaxLength(120)
                .IsUnicode(false);
            entity.Property(e => e.DescripcionEspecifica)
                .IsRequired()
                .HasMaxLength(1000)
                .IsUnicode(false);
            entity.Property(e => e.EspecificacionesTecnicas)
                .IsRequired()
                .HasMaxLength(1500)
                .IsUnicode(false);
            entity.Property(e => e.Estatus)
                .IsRequired()
                .HasMaxLength(80)
                .IsUnicode(false);
            entity.Property(e => e.LineaServicio)
                .IsRequired()
                .HasMaxLength(120)
                .IsUnicode(false);
            entity.Property(e => e.NumeroParteFabricante)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NumeroSerieLps)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("NumeroSerieLPS");
            entity.Property(e => e.Proveedor)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.SubLineaServicio)
                .HasMaxLength(120)
                .IsUnicode(false);
            entity.Property(e => e.TotalSinIva)
                .HasColumnType("decimal(18, 12)")
                .HasColumnName("TotalSinIVA");
            entity.Property(e => e.Ubicacion)
                .IsRequired()
                .HasMaxLength(120)
                .IsUnicode(false);
            entity.Property(e => e.ValorUnitarioSinIva)
                .HasColumnType("decimal(18, 12)")
                .HasColumnName("ValorUnitarioSinIVA");

            entity.HasOne(d => d.CodigoProductoNavigation).WithMany(p => p.ItemInventario)
                .HasForeignKey(d => d.CodigoProducto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ItemInventario_Producto");

            entity.HasOne(d => d.IdInformacionRegistroNavigation).WithMany(p => p.ItemInventario)
                .HasForeignKey(d => d.IdInformacionRegistro)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ItemInventario_InformacionRegistro");
        });

        modelBuilder.Entity<ItemsNoOperativo>(entity =>
        {
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(150)
                .IsUnicode(false);
        });

        modelBuilder.Entity<LineaServicio>(entity =>
        {
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(120)
                .IsUnicode(false);
        });

        modelBuilder.Entity<NovedadItem>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_NovedadesRelevantes");

            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.Novedad)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);

            entity.HasOne(d => d.IdItemInventarioNavigation).WithMany(p => p.NovedadItem)
                .HasForeignKey(d => d.IdItemInventario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_NovedadesRelevantes_ItemInventario");
        });

        modelBuilder.Entity<Perfil>(entity =>
        {
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<PerfilPermisos>(entity =>
        {
            entity.HasOne(d => d.IdPerfilNavigation).WithMany(p => p.PerfilPermisos)
                .HasForeignKey(d => d.IdPerfil)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PerfilPermisos_Perfil");

            entity.HasOne(d => d.IdPermisoNavigation).WithMany(p => p.PerfilPermisos)
                .HasForeignKey(d => d.IdPermiso)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PerfilPermisos_Permisos");
        });

        modelBuilder.Entity<Permisos>(entity =>
        {
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(80)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Producto>(entity =>
        {
            entity.HasKey(e => e.Codigo);

            entity.Property(e => e.Codigo)
                .HasMaxLength(120)
                .IsUnicode(false);
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(120)
                .IsUnicode(false);

            entity.HasOne(d => d.IdCategoriaNavigation).WithMany(p => p.Producto)
                .HasForeignKey(d => d.IdCategoria)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Producto_Categoria");

            entity.HasOne(d => d.IdDepartamentoNavigation).WithMany(p => p.Producto)
                .HasForeignKey(d => d.IdDepartamento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Producto_Departamento");

            entity.HasOne(d => d.IdLineaServicioNavigation).WithMany(p => p.Producto)
                .HasForeignKey(d => d.IdLineaServicio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Producto_LineaServicio");

            entity.HasOne(d => d.IdSubLineaServicioNavigation).WithMany(p => p.Producto)
                .HasForeignKey(d => d.IdSubLineaServicio)
                .HasConstraintName("FK_Producto_SubLineaServicio");
        });

        modelBuilder.Entity<Proveedor>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Correo)
                .IsRequired()
                .HasMaxLength(120)
                .IsUnicode(false);
            entity.Property(e => e.Direccion)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.NombreComercial)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.PersonaContacto)
                .IsRequired()
                .HasMaxLength(80)
                .IsUnicode(false);
            entity.Property(e => e.RazonSocial)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.Ruc)
                .IsRequired()
                .HasMaxLength(14)
                .IsUnicode(false);
            entity.Property(e => e.Telefono)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false);
        });

        modelBuilder.Entity<SubLineaServicio>(entity =>
        {
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(120)
                .IsUnicode(false);

            entity.HasOne(d => d.IdLineaServicioNavigation).WithMany(p => p.SubLineaServicio)
                .HasForeignKey(d => d.IdLineaServicio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SubLineaServicio_LineaServicio");
        });

        modelBuilder.Entity<TransaccionesEstadoItem>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.FechaTransaccion).HasColumnType("datetime");

            entity.HasOne(d => d.IdEstatusNavigation).WithMany(p => p.TransaccionesEstadoItem)
                .HasForeignKey(d => d.IdEstatus)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TransaccionesEstadoItem_Estatus");

            entity.HasOne(d => d.IdItemInventarioNavigation).WithMany(p => p.TransaccionesEstadoItem)
                .HasForeignKey(d => d.IdItemInventario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TransaccionesEstadoItem_ItemInventario");
        });

        modelBuilder.Entity<Ubicacion>(entity =>
        {
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(150)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Usuario>(entity =>
        {
            entity.Property(e => e.Contrasena)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.NombreUsuario)
                .IsRequired()
                .HasMaxLength(120)
                .IsUnicode(false);

            entity.HasOne(d => d.IdPerfilNavigation).WithMany(p => p.Usuario)
                .HasForeignKey(d => d.IdPerfil)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Usuario_Perfil");
        });

        OnModelCreatingGeneratedFunctions(modelBuilder);
        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}